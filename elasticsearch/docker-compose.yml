version: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - ./data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - SERVER_NAME=${KIBANA_SERVER_NAME}
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana/config:/usr/share/kibana/config
      - ./kibana/data:/usr/share/kibana/data
        docker.elastic.co/kibana/kibana:7.16.2
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.service=kibana"
      - "traefik.http.routers.kibana.rule=Host(\"$KIBANA_SERVER_NAME\")"
      - "traefik.http.routers.kibana.tls=true"
      - "traefik.http.routers.kibana.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.kibana.entrypoints=websecure"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"
    networks:
      - web_proxy
      - elasticsearch

networks:
  web_proxy:
    external:
      name: web_proxy
  elasticsearch:
    driver: bridge
