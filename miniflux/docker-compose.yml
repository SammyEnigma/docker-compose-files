version: "3.9"

services:
  miniflux_db:
    image: postgres:14
    user: "${PUID}:${PGID}"
    container_name: miniflux_db
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=${MINIFLUX_DB_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - db

  miniflux_db_dumper:
    image: paolobasso/database_dumper:latest
    restart: unless-stopped
    depends_on:
      - miniflux_db
    container_name: miniflux_db_dumper
    volumes:
      - ./dumps:/dumps
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DUMPER_TYPE=postgres
      - DUMPER_DATABASE=miniflux
      - DUMPER_HOST=miniflux_db
      - DUMPER_USER=miniflux
      - DUMPER_PASSWORD=${MINIFLUX_DB_PASSWORD}
      - DUMPER_HEALTHCHECKS_URL=${MINIFLUX_DB_DUMPER_HEALTHCHECKS_URL}
    networks:
      - db

  miniflux:
    image: miniflux/miniflux
    container_name: miniflux
    depends_on:
      - miniflux_db
    environment:
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USERNAME}
      - ADMIN_PASSWORD=${MINIFLUX_PASSWORD}
      - DATABASE_URL=postgres://miniflux:${MINIFLUX_DB_PASSWORD}@miniflux_db/miniflux?sslmode=disable
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miniflux.service=miniflux"
      - "traefik.http.routers.miniflux.tls=true"
      - "traefik.http.routers.miniflux.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.miniflux.entrypoints=websecure"
      - "traefik.http.services.miniflux.loadbalancer.server.port=8080"
      - "traefik.http.routers.miniflux.middlewares=authelia@docker"
    networks:
      - web_proxy
      - db

networks:
  web_proxy:
    external: true
  db:
    driver: bridge
