version: "3.9"

services:
  invidious_db:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: invidious_db
    user: "${PUID}:${PGID}"
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      - POSTGRES_DB=invidious
      - POSTGRES_USER=invidious
      - POSTGRES_PASSWORD=${INVIDIOUS_DATABASE_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U invidious -d ${INVIDIOUS_DATABASE_PASSWORD}"
        ]
    networks:
      - invidious

  invidious_db_dumper:
    image: paolobasso/database_dumper:postgres-15
    restart: unless-stopped
    depends_on:
      - invidious_db
    container_name: invidious_db_dumper
    volumes:
      - ./dumps:/dumps
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DUMPER_DATABASE=invidious
      - DUMPER_HOST=invidious_db
      - DUMPER_USER=invidious
      - DUMPER_PASSWORD=${INVIDIOUS_DATABASE_PASSWORD}
      - DUMPER_HEALTHCHECKS_URL=${INVIDIOUS_DB_DUMPER_HEALTHCHECKS_URL}
    networks:
      - invidious

  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    depends_on:
      - invidious_db
    user: "${PUID}:${PGID}"
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: invidious
          password: ${INVIDIOUS_DATABASE_PASSWORD}
          host: invidious_db
          port: 5432
        check_tables: true
        domain: ${INVIDIOUS_DOMAIN}
        external_port: 443
        popular_enabled: false
        registration_enabled: false
        https_only: true
        statistics_enabled: false
    restart: unless-stopped
    volumes:
      - ./data:/invidious/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.invidious.service=invidious"
      - "traefik.http.routers.invidious.tls=true"
      - "traefik.http.routers.invidious.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.invidious.entrypoints=websecure"
      - "traefik.http.services.invidious.loadbalancer.server.port=3000"
      - "traefik.http.routers.invidious.middlewares=authelia@docker"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    networks:
      - invidious
      - web_proxy

networks:
  web_proxy:
    external: true
  invidious:
    driver: bridge
